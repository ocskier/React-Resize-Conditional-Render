{"version":3,"sources":["logo.svg","App.js","utils/debounceScreenWidth.jsx","reportWebVitals.js","index.js"],"names":["App","useState","document","body","clientWidth","width","setWidth","debouncedWidth","value","debouncedScreenWidth","setDebouncedScreenWidth","useEffect","timeoutId","setTimeout","clearTimeout","useDebounceScreenWidth","window","addEventListener","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6LAAe,MAA0B,iC,eC4C1BA,MArCf,WAAgB,IAAD,EACaC,mBAASC,SAASC,KAAKC,aADpC,mBACNC,EADM,KACCC,EADD,KAEPC,ECPuB,SAACC,GAAW,IAAD,EACgBP,mBAASO,GADzB,mBACjCC,EADiC,KACXC,EADW,KAWxC,OATAC,qBAAU,WACR,IAAMC,EAAYC,YAAW,WAC3BH,EAAwBF,KACvB,KACH,OAAO,WACLM,aAAaF,MAEd,CAACJ,IAEGC,EDJgBM,CAAuBV,GAO9C,OALAM,qBAAU,WAERK,OAAOC,iBAAiB,UADN,kBAAMX,EAASJ,SAASC,KAAKC,kBAE9C,IAGD,sBAAKc,UAAU,MAAf,UACGX,EAAiB,KAChB,qCACE,yCACA,oFAGHA,EAAiB,KAChB,yBAAQW,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCElBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BZ,K","file":"static/js/main.0fbd16e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport { useState, useEffect } from 'react';\n\nimport { useDebounceScreenWidth } from './utils/debounceScreenWidth';\n\nimport './App.css';\n\nfunction App() {\n  const [width, setWidth] = useState(document.body.clientWidth);\n  const debouncedWidth = useDebounceScreenWidth(width);\n  \n  useEffect(() => {\n    const runResize = () => setWidth(document.body.clientWidth);\n    window.addEventListener('resize', runResize);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {debouncedWidth > 800 && (\n        <>\n          <h2>Desktop</h2>\n          <p>{`Shrink the screen size to see the magic <======|`}</p>\n        </>\n      )}\n      {debouncedWidth < 800 && (\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounceScreenWidth = (value) => {\r\n  const [debouncedScreenWidth, setDebouncedScreenWidth] = useState(value);\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setDebouncedScreenWidth(value);\r\n    }, 400);\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedScreenWidth;\r\n};\r\n\r\nexport { useDebounceScreenWidth };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}